/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientserverapp;

import java.awt.TextArea;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *3
 * @author satyam
 */
public class serverForm extends javax.swing.JFrame {

    static ServerSocket ss;;
    static InputStream din;
    static DataInputStream dind;
    static DataOutputStream doutd;
    static OutputStream dout;
    static Socket s;
    
    
    public serverForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtfield_server = new javax.swing.JTextField();
        send_btn_server = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea_server = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        send_btn_server.setText("serve send");
        send_btn_server.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                send_btn_serverActionPerformed(evt);
            }
        });

        txtArea_server.setColumns(20);
        txtArea_server.setRows(5);
        jScrollPane1.setViewportView(txtArea_server);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(txtfield_server, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(send_btn_server, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfield_server, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(send_btn_server, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void send_btn_serverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_send_btn_serverActionPerformed
        // TODO add your handling code here:
        try {
        String msgout="";
        msgout=txtfield_server.getText().trim();
        
            doutd.writeUTF(msgout);//sending
        } catch (IOException ex) {
            Logger.getLogger(serverForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_send_btn_serverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

       
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(serverForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(serverForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(serverForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(serverForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>
            
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new serverForm().setVisible(true);
                }
            });
             try {
            String msgin="";
            ss=new ServerSocket(1258);
            s=ss.accept();
            din= s.getInputStream();
            dout= s.getOutputStream();
            dind=new DataInputStream(din);
            doutd=new DataOutputStream(dout);
            
            
            
            while(!msgin.equals("exit"))
            {
                msgin=dind.readUTF();
                txtArea_server.setText(txtArea_server.getText().trim()+"\n"+msgin);
                
            }
            
        } catch (Exception ex) {
            Logger.getLogger(serverForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton send_btn_server;
    private static javax.swing.JTextArea txtArea_server;
    private javax.swing.JTextField txtfield_server;
    // End of variables declaration//GEN-END:variables
}
